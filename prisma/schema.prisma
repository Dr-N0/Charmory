generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  password    String
  characters  Character[]
}

model Character {
  id              String        @id @default(uuid())
  owner           User          @relation(fields: [ownerId], references: [id])
  ownerId         String

  name            String?
  level           Int           @default(1)
  feats           String[]      @default([])
  speed           Int           @default(30)
  armorClass      Int           @default(10)
  initiative      Int           @default(0)
  proficencies    Proficencies?
  inspiration     Boolean       @default(false)

  healthMax       Int
  healthCurrent   Int
  
  race            Race?
  class           Class?
  abilities       Abilities?
  description     Description?
  equipment       Equipment?

  inventory         Inventory?
}

// ===== Race =====
model Race {
  id          Int         @id @default(autoincrement())
  character   Character   @relation(fields: [characterId], references: [id])
  characterId String      @unique

  name        String?
  size        Int?
  languages   String[]    @default([])
  variant     String?
}

// ===== Class =====
model Class {
  id          Int         @id @default(autoincrement())
  character   Character   @relation(fields: [characterId], references: [id])
  characterId String      @unique

  name        String?
}

// ===== Abilities =====
model Abilities {
  id            Int         @id @default(autoincrement())
  character     Character   @relation(fields: [characterId], references: [id])
  characterId   String      @unique

  genMethod     GenMethod   @default(MANUAL)

  strength      Int
  dexterity     Int
  constitution  Int
  intelligence  Int
  wisdom        Int
  charisma      Int

  senses        Senses[]
}
enum GenMethod {
  MANUAL
  ARRAY
  POINT
}
enum Senses {
  BLINDSIGHT
  DARKVISION
  TREMORSENSE
  TRUESIGHT
}

// ===== Description =====
model Description {
  id          Int         @id @default(autoincrement())
  character   Character   @relation(fields: [characterId], references: [id])
  characterId String      @unique

  background  String?
}

// ===== Equipment =====
model Equipment {
  id          Int         @id @default(autoincrement())
  character   Character   @relation(fields: [characterId], references: [id])
  characterId String      @unique

  name        String?
}

model Proficencies {
  id            Int         @id @default(autoincrement())
  character     Character   @relation(fields: [characterId], references: [id])
  characterId   String      @unique

  savingStrength      HowProficent  @default(NONE)
  savingDexterity     HowProficent  @default(NONE)
  savingConstitution  HowProficent  @default(NONE)
  savingIntelligence  HowProficent  @default(NONE)
  savingWisdom        HowProficent  @default(NONE)
  savingCharisma      HowProficent  @default(NONE)
  
  acrobatics          HowProficent  @default(NONE)
  animalHandling      HowProficent  @default(NONE)
  arcana              HowProficent  @default(NONE)
  athletics           HowProficent  @default(NONE)
  deception           HowProficent  @default(NONE)
  history             HowProficent  @default(NONE)
  insight             HowProficent  @default(NONE)
  intimidation        HowProficent  @default(NONE)
  investigation       HowProficent  @default(NONE)
  medicine            HowProficent  @default(NONE)
  nature              HowProficent  @default(NONE)
  perception          HowProficent  @default(NONE)
  performance         HowProficent  @default(NONE)
  persuasion          HowProficent  @default(NONE)
  religion            HowProficent  @default(NONE)
  sleightOfHand       HowProficent  @default(NONE)
  stealth             HowProficent  @default(NONE)
  survival            HowProficent  @default(NONE)
}
enum HowProficent {
  NONE
  PROFICENT
  EXTRA
}

model Inventory {
  id          Int         @id @default(autoincrement())
  character   Character   @relation(fields: [characterId], references: [id])
  characterId String      @unique

  armor       Armor?
  weapons     Weapon[]
  items       Item[]
}

model Armor {
  id          Int         @id @default(autoincrement())
  inventory   Inventory   @relation(fields: [inventoryId], references: [id])
  inventoryId Int      @unique

  name        String?
  type        ItemType
}
model Weapon {
  id          Int         @id @default(autoincrement())
  inventory   Inventory   @relation(fields: [inventoryId], references: [id])
  inventoryId Int      @unique

  name        String?
  type        ItemType
  
}
model Item {
  id          Int         @id @default(autoincrement())
  inventory   Inventory   @relation(fields: [inventoryId], references: [id])
  inventoryId Int      @unique

  name        String?
  type        ItemType
  
}

enum ItemType {
  ARMOR
  WEAPON
  RING
  ROD
  SCROLL
  STAFF
  WAND
  MAGIC_ITEM
}